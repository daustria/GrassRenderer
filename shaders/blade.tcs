#version 430 core

layout(vertices = 1) out;

in vec4 vs_v1[];
in vec4 vs_v2[];
in vec3 vs_blade_dir[];
in vec3 vs_blade_up[];

patch out vec4 tc_v1;
patch out vec4 tc_v2;
patch out vec3 tc_blade_dir;
patch out vec3 tc_blade_up;

void main()
{
	gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;

	// Hardcoded tessellation values. Let's see what happens with these values and adjust later.
	// Invocation ID 0 controls tessellation levels for the entire patch.

	tc_v1 = vs_v1[0];
	tc_v2 = vs_v2[0];
	tc_blade_dir = vs_blade_dir[0];
	tc_blade_up = vs_blade_up[0];

	const float level = 10.0f;
	gl_TessLevelInner[0] = 1.0f;
	gl_TessLevelInner[1] = level;
	gl_TessLevelOuter[0] = level;
	gl_TessLevelOuter[1] = 1.0f;
	gl_TessLevelOuter[2] = level;
	gl_TessLevelOuter[3] = 1.0f;
}